{"version":3,"sources":["components/navbar/NavBar.js","components/image-results/ImageResults.js","components/search/Search.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","root","flexGrow","NavBar","classes","react_default","a","createElement","className","AppBar","position","color","Toolbar","Typography","variant","theme","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","icon","ImageResults","props","_useState","useState","_useState2","Object","slicedToArray","open","setOpen","_useState3","_useState4","curImage","setCurImage","imageData","console","log","handleClose","e","preventDefault","GridList","cellHeight","cols","map","img","GridListTile","key","id","src","largeImageURL","alt","tags","GridListTileBar","title","subtitle","user","actionIcon","IconButton","onClick","handleClickOpen","Search_default","Dialog","onClose","maxWidth","aria-labelledby","aria-describedby","DialogContent","DialogActions","Button","autoFocus","textFieldEmpty","marginLeft","spacing","selectEmpty","marginTop","Search","keywords","setKeywords","num","setNum","_useState5","_useState6","images","setImages","url","pkey","react","navbar_NavBar","TextField","name","onChange","value","target","str","concat","axios","get","then","res","data","hits","catch","err","helperText","Select","numValue","Number","input","Input","displayEmpty","MenuItem","image_results_ImageResults","App","search_Search","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.49db2309.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nfunction NavBar() {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" color=\"inherit\">\r\n            Photos\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default NavBar;","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n/**\r\n * function组件不能使用this，所以弊端我目前没法解决\r\n * class组件不能是使用hook，我头也大\r\n * 我想放弃material4了，很不友好\r\n * 本次的难题就出现在，无法拿到局部组件循环后的指定索引（指定对象）。\r\n * 对的，function组件onclick传参问题尤为突出\r\n * 其实用  redux  是可以解决的  不过我头大\r\n */\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-around\",\r\n    overflow: \"hidden\",\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  icon: {\r\n    color: \"rgba(255, 255, 255, 0.54)\"\r\n  }\r\n}));\r\n\r\nfunction ImageResults(props) {\r\n  const [open, setOpen] = useState(false);\r\n  const [curImage, setCurImage] = useState({});\r\n  const classes = useStyles();\r\n\r\n  const imageData = props.imageData;\r\n  console.log(imageData);\r\n\r\n  const handleClickOpen = (img, e) => {\r\n    e.preventDefault();\r\n    setCurImage(img);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = e => {\r\n    e.preventDefault();\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <GridList cellHeight={160} cols={3}>\r\n        {imageData.map(img => (\r\n          <GridListTile key={img.id} cols={img.cols || 1}>\r\n            <img src={img.largeImageURL} alt={img.tags} />\r\n            <GridListTileBar\r\n              title={img.tags}\r\n              subtitle={<span>by: {img.user}</span>}\r\n              actionIcon={\r\n                <IconButton\r\n                  className={classes.icon}\r\n                  onClick={e => handleClickOpen(img, e)}\r\n                >\r\n                  <SearchIcon />\r\n                </IconButton>\r\n              }\r\n            />\r\n          </GridListTile>\r\n        ))}\r\n      </GridList>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        maxWidth=\"lg\"\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogContent>\r\n          <img src={curImage.largeImageURL} alt={curImage.tags} />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageResults;\r\n","import React, { useState, Fragment } from \"react\";\r\nimport NavBar from \"../navbar/NavBar\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport axios from \"axios\";\r\n\r\nimport ImageResults from \"../image-results/ImageResults\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  textFieldEmpty: {\r\n    marginLeft: theme.spacing(5)\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n    marginLeft: theme.spacing(5)\r\n  }\r\n}));\r\n\r\nfunction Search() {\r\n  const classes = useStyles();\r\n  const [keywords, setKeywords] = useState(\"\");\r\n  const [num, setNum] = useState(5);\r\n  const [images, setImages] = useState([]);\r\n  \r\n  const url = \"https://pixabay.com/api/\";\r\n  const pkey = \"13310363-69a66901da412b3fd9faea780\";\r\n\r\n  const onSearchChange = e => {\r\n    let value = e.target.value;\r\n    setKeywords(value);\r\n    let str = `${url}?key=${pkey}&q=${value}&per_page=${num}&image_type=photo`;\r\n    console.log(str);\r\n    axios\r\n      .get(str)\r\n      .then(res => {\r\n        if (value) {\r\n          setImages(res.data.hits);\r\n        } else {\r\n          setImages([]);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleChange = e => {\r\n    let numValue = Number(e.target.value);\r\n    setNum(numValue);\r\n    let str = `${url}?key=${pkey}&q=${keywords}&per_page=${numValue}&image_type=photo`;\r\n    console.log(str);\r\n    axios\r\n      .get(str)\r\n      .then(res => {\r\n        if (keywords) {\r\n          setImages(res.data.hits);\r\n        } else {\r\n          setImages([]);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <NavBar />\r\n      <TextField\r\n        name=\"keywords\"\r\n        onChange={onSearchChange}\r\n        className={classes.textFieldEmpty}\r\n        helperText=\"Input image keyword\"\r\n        autoFocus\r\n      />\r\n      <br />\r\n      <Select\r\n        name=\"currentNum\"\r\n        value={num}\r\n        onChange={handleChange}\r\n        input={<Input name=\"age\" id=\"age-label-placeholder\" />}\r\n        displayEmpty\r\n        className={classes.selectEmpty}\r\n      >\r\n        <MenuItem value={5}>\r\n          <em>5</em>\r\n        </MenuItem>\r\n        <MenuItem value={10}>10</MenuItem>\r\n        <MenuItem value={15}>15</MenuItem>\r\n        <MenuItem value={20}>20</MenuItem>\r\n      </Select>\r\n      {images ? <ImageResults imageData={images} /> : null}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Search from \"./components/search/Search\";\n\nfunction App() {\n  return <Search />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}